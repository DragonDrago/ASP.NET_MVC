
@model PagedList.IPagedList<DAL.Models.Product>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>Products</h2>
    @if (User.Identity.IsAuthenticated)
    {
        <p style=" font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif">
            @Html.ActionLink("Create New", "Create")
        </p>
    }

    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
        <p>
            Find by name: @Html.TextBox("searchProduct", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Product Name", "Index", new { sortProduct = ViewBag.ProductNameSortParm, Filter = ViewBag.CurrentFilter })
            </th>
            <th>
                Product Description
            </th>
            <th>
                @Html.ActionLink("Product Category", "Index", new { sortProduct = ViewBag.ProductCategorySortParm, Filter = ViewBag.CurrentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Price", "Index", new { sortProduct = ViewBag.PriceSortParm, Filter = ViewBag.CurrentFilter })
            </th>
            <th>
                Image
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <img src="/Products/ProductImage/@item.Id" width="100" />
                </td>
                @if (User.Identity.IsAuthenticated)
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                }
            </tr>
        }

    </table>

    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

